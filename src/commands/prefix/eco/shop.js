const {
    Events,
    Message,
    EmbedBuilder,
    PermissionsBitField,
    ActionRowBuilder,
    ButtonBuilder,
    ButtonStyle,
} = require('discord.js');
const { prefix } = require('../../../config.json');
const checkAndAddUser = require('../../../utils/checkAndAddUser.js')

module.exports = {
    name: Events.MessageCreate,
    async execute(message) {
        if (!message.content.startsWith(prefix) || message.author.bot) return;

        const args = message.content.slice(prefix.length).trim().split(/\s+/);
        const command = args.shift().toLowerCase();

        if (command === "showshop") {
            try {

                

                if (!message.member.permissions.has(PermissionsBitField.Flags.Administrator)) {
                    const embedError = new EmbedBuilder()
                        .setColor('DarkRed')
                        .setTitle('–û—à–∏–±–∫–∞')
                        .addFields({ name: '–ü—Ä–∏—á–∏–Ω–∞:', value: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.' })
                        .setFooter({ text: `–í—ã–∑–≤–∞–Ω–æ ${message.author.tag}` })
                        .setTimestamp();

                    return message.channel.send({ embeds: [embedError] });
                }
                
                const user = await checkAndAddUser(message.member);

                const embedMain = new EmbedBuilder()
                    .setColor('DarkRed')
                    // .setTitle('üõçÔ∏è –ú–ê–ì–ê–ó–ò–ù')
                    // .setImage('https://cdn.discordapp.com/attachments/1348700162255753284/image.png') // –≤—Å—Ç–∞–≤—å —Å–≤–æ—é –∫–∞—Ä—Ç–∏–Ω–∫—É
                    .addFields(
                        {
                            name: "ü™ô –ú–û–ù–ï–¢–ö–ò",
                            value: "–ú–æ–∂–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –ª—é–±–æ–π —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é: —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏, –≤–æ–π—Å–∞–º–∏, —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∏–≥—Ä–∞–º–∏",
                            inline: true
                        },
                        {
                            name: "üíé –ö–†–ò–°–¢–ê–õ–õ–´",
                            value: "–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —É—á–∞—Å—Ç–∏–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –∏–≤–µ–Ω—Ç–∞—Ö, –∞ —Ç–∞–∫–∂–µ —Å –ø–æ–º–æ—â—å—é <#1348700162255753284>",
                            inline: true
                        }
                    );

                // –°—Ç—Ä–æ–∫–∞ 1 ‚Äî –∫–Ω–æ–ø–∫–∞ "–¢–æ–≤–∞—Ä—ã –∑–∞ –º–æ–Ω–µ—Ç–∫–∏"
                const row1 = new ActionRowBuilder().addComponents(
                    new ButtonBuilder()
                        .setCustomId('shop_open_coins')
                        .setLabel('ü™ô –¢–æ–≤–∞—Ä—ã –∑–∞ –º–æ–Ω–µ—Ç–∫–∏')
                        .setStyle(ButtonStyle.Secondary),
                    new ButtonBuilder()
                        .setCustomId('shop_open_crystals')
                        .setLabel('üíé –¢–æ–≤–∞—Ä—ã –∑–∞ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã')
                        .setStyle(ButtonStyle.Secondary)
                );


                // –°—Ç—Ä–æ–∫–∞ 3 ‚Äî –∫–Ω–æ–ø–∫–∞ "–ö—É–ø–∏—Ç—å –∫—Ä–∏—Å—Ç–∞–ª–ª—ã"
                const row3 = new ActionRowBuilder().addComponents(
                    new ButtonBuilder()
                        .setCustomId('shop_buy_roles')
                        .setLabel('üé≠ –ö—É–ø–∏—Ç—å —Ä–æ–ª–∏')
                        .setStyle(ButtonStyle.Secondary),
                    new ButtonBuilder()
                        .setCustomId('shop_buy_crystals')
                        .setLabel('üõí –ö—É–ø–∏—Ç—å –∫—Ä–∏—Å—Ç–∞–ª–ª—ã')
                        .setStyle(ButtonStyle.Secondary)
                );

                await message.channel.send({
                    embeds: [embedMain],
                    components: [row1, row3]
                });

            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ showshop:', error);
                message.channel.send('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.');
            }
        }
    },
};
